parameters:
  - name: ServiceName
    default: ""
  - name: RunTerraform
    default: False
  - name: subscription
    default: 'Pay-As-You-Go (8b41bb3a-73a0-4041-90c2-d82d4d3cbc5f)'
  - name: RunPostDeploymentTerraform
    default: False 
stages: 
  - stage: Service_Infrastructure_Setup
    displayName: Service Infrastructure Setup
    pool: Azure Pipelines
    condition: eq(${{ parameters.RunTerraform }}, 'True')
    jobs:
      - job: Terraform
        steps:
        - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        - task: TerraformTaskV4@4
          displayName: Run Terraform Init 
          inputs:
            provider: 'azurerm'
            command: 'init'
            commandOptions: '-reconfigure'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/development/predeployment' 
            backendServiceArm: 'Pay-As-You-Go (8b41bb3a-73a0-4041-90c2-d82d4d3cbc5f)'
            backendAzureRmResourceGroupName: 'infra_rg'
            backendAzureRmStorageAccountName: 'infrastanstorageaccount'
            backendAzureRmContainerName: 'terraform'
            backendAzureRmKey: 'userservice.predeployment.terraform.tfstate'
        - task: TerraformTaskV4@4
          displayName: Run Terraform Plan 
          inputs:
            provider: 'azurerm'
            command: 'plan'
            commandOptions: '-input=false -var "client_id=$(client_id)" -var "client_secret=$(client_secret)" -var "tenant_id=$(tenant_id)" -var "subscription_id=$(subscription_id)"'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/development/predeployment' 
            environmentServiceNameAzureRM: 'Pay-As-You-Go (8b41bb3a-73a0-4041-90c2-d82d4d3cbc5f)'
        - task: TerraformTaskV4@4
          displayName: Run Terraform Apply 
          inputs:
            provider: 'azurerm'
            command: 'apply'
            commandOptions: '-input=false -var "client_id=$(client_id)" -var "client_secret=$(client_secret)" -var "tenant_id=$(tenant_id)" -var "subscription_id=$(subscription_id)"'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/development/predeployment' 
            environmentServiceNameAzureRM: 'Pay-As-You-Go (8b41bb3a-73a0-4041-90c2-d82d4d3cbc5f)'
        - task: CmdLine@2
          name: SetServicePrincipalVariables
          displayName: Test
          inputs:
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/development/predeployment' 
            script: |
                  echo "##vso[task.setvariable variable=servicePrincipalDirectoryVar;isOutput=true]$(terraform output service_sp_tenant_id)"
                  echo "##vso[task.setvariable variable=servicePrincipalIdVar;isOutput=true]$(terraform output service_sp_id)"
                  echo "##vso[task.setvariable variable=servicePrincipalSecretVar;isOutput=true]$(terraform output service_sp_pswd)"
        
  - stage: Deploy
    variables:
      service_sp_id: $[ stageDependencies.Service_Infrastructure_Setup.Terraform.outputs['SetServicePrincipalVariables.servicePrincipalIdVar'] ]
      service_sp_pswd: $[ stageDependencies.Service_Infrastructure_Setup.Terraform.outputs['SetServicePrincipalVariables.servicePrincipalSecretVar'] ]
      service_sp_tenant_id: $[ stageDependencies.Service_Infrastructure_Setup.Terraform.outputs['SetServicePrincipalVariables.servicePrincipalDirectoryVar'] ]
    displayName: Deploy
    pool: Azure Pipelines
    jobs:
      - job: 
        steps:
        - task: AzureKeyVault@2
          displayName: Get Client Credentials
          inputs:
            azureSubscription: 'Pay-As-You-Go (8b41bb3a-73a0-4041-90c2-d82d4d3cbc5f)'
            KeyVaultName: 'develop-pilot-kv'
            SecretsFilter: '*'
            RunAsPreJob: true
        - task: CmdLine@2
          displayName: Check Key Vault
          inputs:
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/development/predeployment' 
            script: |
              echo $(user-service-sp-id)
              echo $(user-service-sp-password)
              echo $(user-service-sp-tenant)
        - task: HelmDeploy@0
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceConnection: 'develop_aks_service_endpoint'
            namespace: 'default'
            command: 'upgrade'
            chartType: 'FilePath'
            chartPath: './${{ parameters.ServiceName }}'
            chartVersion: '$(IMAGE_TAG)'
            releaseName: '${{ parameters.ServiceName }}'
            valueFile: './${{ parameters.ServiceName }}/values-develop.yaml'
            arguments: '--atomic'
            overrideValues: 'service_sp_id=$(service_sp_id),service_sp_pswd=$(service_sp_pswd),service_sp_tenant_id=$(service_sp_tenant_id)'

  - stage: Service_Infrastructure_Postdeployment_Setup
    displayName: Service Infrastructure Postdeployment Setup
    pool: Azure Pipelines
    condition: eq(${{ parameters.RunPostDeploymentTerraform }}, 'True')
    jobs:
      - job:
        steps:
        - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        - task: TerraformTaskV4@4
          displayName: Run Terraform Init 
          inputs:
            provider: 'azurerm'
            command: 'init'
            commandOptions: '-reconfigure'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/development/postdeployment' 
            backendServiceArm: 'Pay-As-You-Go (8b41bb3a-73a0-4041-90c2-d82d4d3cbc5f)'
            backendAzureRmResourceGroupName: 'infra_rg'
            backendAzureRmStorageAccountName: 'infrastanstorageaccount'
            backendAzureRmContainerName: 'terraform'
            backendAzureRmKey: 'userservice.postdeployment.terraform.tfstate'
        - task: TerraformTaskV4@4
          displayName: Run Terraform Plan 
          inputs:
            provider: 'azurerm'
            command: 'plan'
            commandOptions: '-input=false -var "client_id=$(client_id)" -var "client_secret=$(client_secret)" -var "tenant_id=$(tenant_id)" -var "subscription_id=$(subscription_id)"'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/development/postdeployment' 
            environmentServiceNameAzureRM: 'Pay-As-You-Go (8b41bb3a-73a0-4041-90c2-d82d4d3cbc5f)'
        - task: TerraformTaskV4@4
          displayName: Run Terraform Apply 
          inputs:
            provider: 'azurerm'
            command: 'apply'
            commandOptions: '-input=false -var "client_id=$(client_id)" -var "client_secret=$(client_secret)" -var "tenant_id=$(tenant_id)" -var "subscription_id=$(subscription_id)"'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/development/postdeployment' 
            environmentServiceNameAzureRM: 'Pay-As-You-Go (8b41bb3a-73a0-4041-90c2-d82d4d3cbc5f)'